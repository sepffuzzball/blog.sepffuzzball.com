---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  CONTENT_DIR: "./content/"
  BLOG_DIR: "{{ .CONTENT_DIR }}/blog"

tasks:
  new:
    desc: Create a new draft post from template
    cmds:
      - git checkout -b blog/{{ .name }} main
      - hugo new content blog/{{ .name }}/index.md
      # NOTE: using gnu sed via nix; if using osx sed may have to use `sed -i ''`
      - |
        sed -i "/title: \"\"/c\title: '\{\{ title \"{{ .title }}\" \}\}'" {{ .BLOG_DIR }}/{{ .name }}/index.md
    requires:
      vars: ['title']
    vars:
      name: '{{ or .title | lower | replace " " "-" }}'
    preconditions:
      - {msg: "Hugo not found", sh: "type hugo"}

  publish:
    desc: Publish a draft post (set 'draft' to false and update the date)
    summary: |
      task hugo:publish path="<relative path to index.md>"
    cmds:
      # NOTE: using gnu sed via nix; if using osx sed may have to use `sed -i ''`
      - |
        sed -i '/draft: true/c\draft: false' {{ .path }}
      - |
        sed -i '/date: .*/c\date: {{ now.Format "2006-01-02" }}' {{ .path }}
      - echo "Commit this change, then branch is ready for PR!"
      # - task: _pull_request
    requires:
      vars: ["path"]
    preconditions:
      - {msg: "File not found", sh: "test -f {{ .path }}"}

  # _pull_request:
  #   desc: Create a pull request from a draft branch
  #   internal: true
  #   cmds:
  #     - gh pr create --title "Publish post - {{ .file }}" --body "Pull request body"
  #   # dotenv: [".env"]
  #   vars:
  #     file: '{{ or ( .file | lower | trimSuffix ".md") (fail "Variable `file` is required") }}'
  #   preconditions:
  #     - {msg: "github cli ('gh') not found", sh: "type gh"}
  #     - {msg: "Github auth not found.  Run `gh auth login --hostname github.com", sh: "gh auth status"}

  # build:
  #   desc: Build hugo image

  demo:
    desc: Serve the site (with drafts enabled)
    cmd: hugo server -D --disableFastRender
    preconditions:
      - {msg: "Hugo not found", sh: "type hugo"}

  render:
    desc: Render all static site content
    cmds:
      - rm -r {{.ROOT_DIR}}/public
      - rm -r {{.ROOT_DIR}}/resources
      - hugo --gc
    # cmd: nix build '.?submodules=1'
    preconditions:
      - {msg: "Hugo not found", sh: "type hugo"}

  _start:
    desc: Start colima
    internal: true
    cmd: colima start
    preconditions:
      - {msg: "Colima not found", sh: "type colima"}

  run:
    desc: Build site with colima/docker
    deps:
      - task: _start
        # silent: true
    cmds:
      - |
        docker build \
          -t ghcr.io/kylemunn/weblog:debug \
          -f ./docker/Dockerfile \
          .
      - docker run --rm -p 8080:8080 ghcr.io/kylemunn/weblog:debug
      - echo "Run `colima stop` to clean up!"
    preconditions:
      - {msg: "Docker not found", sh: "type docker"}